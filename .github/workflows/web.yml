# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:

  buildPackage:
    runs-on: ubuntu-latest
    env:
      CI_BUILD: 'true'
    steps:
    - uses: actions/checkout@v2
    - run:
        npm i --save-dev
    - name:  'Automated Version Bump'
      uses:  'phips28/gh-action-bump-version@master'
      if: github.event_name == 'push'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PACKAGEJSON_DIR:  ''
    - run:
        npm run build
    - uses: actions/setup-node@v2
      with:
        registry-url: 'https://npm.pkg.github.com'
    - name: Publish package
      if: github.event_name == 'push'
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run:
        npm publish


  buildChangelog:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    env:
      CHANGELOG_FOLDER: changelog_folder
      RELEASE_TYPE: testing
    steps:
      - uses: actions/checkout@v3

      - name: Set release type
        run: echo "RELEASE_TYPE=stable" >> $GITHUB_ENV
        if: github.ref == 'refs/heads/master'

      - name: Getting commits
        run: |
          touch changelog_raw.json
          json='${{ toJSON(github.event.commits) }}'
          echo "$json" >> ./changelog_raw.json
          cat ./changelog_raw.json

      - name: Getting python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Getting commit in python
        run: |
           pip install yandex_tracker_client
           touch changelog.json
           python scripts/commits.py -c ./changelog_raw.json >> ./changelog.json
           cat ./changelog.json
        env:
          OAUTH_TOKEN: ${{ secrets.OAUTH_TOKEN }}
          ORG_ID: ${{ secrets.ORG_ID }}

      - name: Upload changelog to AWS (web)
        run: aws s3 --endpoint-url=https://storage.yandexcloud.net cp ./changelog.json s3://${{ secrets.BUCKET_NAME }}/firmware_v5/${{ env.RELEASE_TYPE }}/web/ --acl public-read
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.YC_STORAGE_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.YC_STORAGE_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.YC_DEFAULT_REGION }}

      - name: Upload changelog to AWS (panel)
        run: aws s3 --endpoint-url=https://storage.yandexcloud.net cp ./changelog.json s3://${{ secrets.BUCKET_NAME }}/firmware_v5/${{ env.RELEASE_TYPE }}/panel/ --acl public-read
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.YC_STORAGE_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.YC_STORAGE_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.YC_DEFAULT_REGION }}

  triggerUpdate:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [buildPackage, buildChangelog]
    env:
      RELEASE_TYPE: testing

    steps:
      - name: Set release type
        run: echo "RELEASE_TYPE=stable" >> $GITHUB_ENV
        if: github.ref == 'refs/heads/master'

      - name: Trigger update build
        run: |
          curl -X POST -H "Accept: application/vnd.github.v3+json" -H "Authorization: token ${{ secrets.STE_APP_BUILD_TOKEN }}" --data '{"event_type": "build", "client_payload": { "release": "${{ env.RELEASE_TYPE }}", "bump": "patch"}}' https://api.github.com/repos/stereotech/STE-App-Build/dispatches
